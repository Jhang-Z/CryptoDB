{"ast":null,"code":"var _jsxFileName = \"/home/user/workplace/CryptoDB/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport LoginPage from './LoginPage'; // 引入登录组件\nimport CryptoDBPanel from './CryptoDBPanel'; // ✅ 引入独立的 CryptoDB 面板组件\n\n// 原有的 CryptoDB 面板内容，我们保留在 App.js 中，但不直接渲染\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 控制是否已登录\n\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true); // 登录成功，显示主界面\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(CryptoDBPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) // 登录后显示主界面\n    : /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) // 否则显示登录页\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LoginPage","CryptoDBPanel","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","handleLoginSuccess","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","_c","$RefreshReg$"],"sources":["/home/user/workplace/CryptoDB/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport LoginPage from './LoginPage'; // 引入登录组件\nimport CryptoDBPanel from './CryptoDBPanel';  // ✅ 引入独立的 CryptoDB 面板组件\n\n// 原有的 CryptoDB 面板内容，我们保留在 App.js 中，但不直接渲染\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 控制是否已登录\n\n  const handleLoginSuccess = () => {\n    setIsLoggedIn(true); // 登录成功，显示主界面\n  };\n\n  return (\n    <div>\n      {isLoggedIn ? (\n        <CryptoDBPanel /> // 登录后显示主界面\n      ) : (\n        <LoginPage onLoginSuccess={handleLoginSuccess} /> // 否则显示登录页\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AACrC,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAE;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMS,kBAAkB,GAAGA,CAAA,KAAM;IAC/BD,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACEJ,OAAA;IAAAM,QAAA,EACGH,UAAU,gBACTH,OAAA,CAACF,aAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IAAA,eAElBV,OAAA,CAACH,SAAS;MAACc,cAAc,EAAEN;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EACnD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACR,EAAA,CAhBQD,GAAG;AAAAW,EAAA,GAAHX,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}