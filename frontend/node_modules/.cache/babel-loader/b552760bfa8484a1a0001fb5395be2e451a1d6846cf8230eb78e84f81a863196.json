{"ast":null,"code":"var _jsxFileName = \"/home/user/workplace/CryptoDB/frontend/src/CryptoDBPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './CryptoDBPanel.css'; // 引入样式文件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CryptoDBPanel({\n  onLogout\n}) {\n  _s();\n  const [query, setQuery] = useState('');\n  const [decryptedOutput, setDecryptedOutput] = useState('');\n  const [selectedTable, setSelectedTable] = useState('');\n  const [statusMessages, setStatusMessages] = useState([]); // 新增状态，用于存储状态消息\n  const [selectedQueryMode, setSelectedQueryMode] = useState(''); // 默认是等值查询\n  const [rowData0, setRowData0] = useState({}); // {columnName: [{ans0: value, rowId: id}, ...]}\n  const [rowData1, setRowData1] = useState({});\n  const [tableColumns, setTableColumns] = useState([]); // 存储当前选中表的列属性\n  const [selectedColumn, setSelectedColumn] = useState(''); // 当前选中的列\n\n  // 创建 ref 用于状态输出容器\n  const statusOutputRef = useRef(null);\n\n  //从数据库获取表列属性的函数：\n\n  const fetchTableColumns = async tableName => {\n    try {\n      addStatusMessage(`正在获取表 ${tableName} 的列属性...`);\n      const response = await fetch(`http://172.28.7.202:8080/api/getTableColumns`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          table: tableName\n        })\n      });\n      const data = await response.json();\n      if (data && data.columns) {\n        setTableColumns(data.columns);\n        console.log(\"col data:\", data.columns);\n        addStatusMessage(`成功获取表 ${tableName} 的列属性`);\n      } else {\n        setTableColumns([]);\n        addStatusMessage(`表 ${tableName} 没有返回列属性数据`);\n      }\n    } catch (error) {\n      setTableColumns([]);\n      addStatusMessage(`获取表 ${tableName} 列属性失败: ${error.message}`);\n      console.error('获取表列属性错误:', error);\n    }\n  };\n  const handleTableChange = async e => {\n    const tableName = e.target.value;\n    setSelectedTable(tableName);\n    setSelectedColumn(''); // 重置列选择\n    // 只有当用户选择了具体的表（非空）时，才去获取列信息\n    if (tableName) {\n      await fetchTableColumns(tableName);\n    } else {\n      // 用户选择了“请选择表”，清空列信息\n      setTableColumns([]);\n    }\n  };\n\n  // 添加状态消息的函数\n  const addStatusMessage = message => {\n    setStatusMessages(prev => [...prev, `> ${new Date().toLocaleTimeString()}: ${message}`]);\n  };\n\n  // 清除状态消息的函数\n  const handleClearStatus = () => {\n    setStatusMessages([]);\n    addStatusMessage('状态日志已清除');\n  };\n\n  // 当状态消息更新时，自动滚动到底部\n  useEffect(() => {\n    if (statusOutputRef.current) {\n      statusOutputRef.current.scrollTop = statusOutputRef.current.scrollHeight;\n    }\n  }, [statusMessages]); // 当 statusMessages 变化时触发\n\n  const handleSecureQuery = async () => {\n    if (!query.trim()) {\n      alert('请输入查询语句');\n      return;\n    }\n    if (!selectedTable) {\n      alert('请选择一个表');\n      return;\n    }\n    if (!selectedQueryMode) {\n      alert('请选择查询模式');\n      return;\n    }\n\n    // 如果您的查询逻辑依赖列选择，比如只针对某列加密/查询，也可以加上：\n    if (!selectedColumn) {\n      alert('请选择列');\n      return;\n    }\n    addStatusMessage('正在提交安全查询...');\n    try {\n      const response = await fetch('http://172.28.7.202:8080/api/secureQuery', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query,\n          table: selectedTable,\n          column: selectedColumn,\n          // 新增：当前选中的列名\n          mode: selectedQueryMode // 新增：当前选中的查询模式}),\n        })\n      });\n      const rawData = await response.text();\n      const data = JSON.parse(rawData);\n      console.log('main:', data);\n      addStatusMessage('查询已成功提交到服务器');\n      addStatusMessage('请从服务器获取结果');\n    } catch (error) {\n      addStatusMessage(`查询失败: ${error.message}`);\n    }\n  };\n\n  // ===== 新增：从 Server1 (8081) 单独获取 ans0 =====\n  const handleFetchAns0FromServer1 = async () => {\n    addStatusMessage('正在从 Server1 (8081) 获取行级结果...');\n    try {\n      const res = await fetch('http://172.28.7.202:8081/server0', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const rawData = await res.text();\n      const data = JSON.parse(rawData);\n      console.log('server0 Data:', data.columns);\n      if (data && data.columns) {\n        const formattedData = {};\n        data.columns.forEach(col => {\n          // 假设每列的 ans0 值是一个数组，每个元素代表一行\n          // 如果后端返回的是单个值，需要调整为数组形式\n          const ans0Values = Array.isArray(col.ans0_values) ? col.ans0_values : [col.ans0];\n          formattedData[col.name] = ans0Values.map((value, index) => ({\n            ans0: value\n          }));\n        });\n        console.log('server0 formattedData:', formattedData);\n        setRowData0(formattedData);\n        addStatusMessage(`成功从 Server1 获取 ${Object.keys(formattedData).length} 列的行数据`);\n      }\n    } catch (e) {\n      addStatusMessage(`获取 Server1 行数据失败: ${e.message}`);\n      console.error('Fetch from Server1 error:', e);\n    }\n  };\n\n  // ===== 新增：从 Server2 (8082) 单独获取 ans1 =====\n  const handleFetchAns1FromServer2 = async () => {\n    addStatusMessage('正在从 Server2 (8082) 获取行级结果...');\n    try {\n      const res = await fetch('http://172.28.7.202:8082/server1', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const rawData = await res.text();\n      const data = JSON.parse(rawData);\n      console.log('server1 Data:', data);\n      if (data && data.columns) {\n        const formattedData = {};\n        data.columns.forEach(col => {\n          // 假设每列的 ans1 值是一个数组，每个元素代表一行\n          // 如果后端返回的是单个值，需要调整为数组形式\n          const ans1Values = Array.isArray(col.ans1_values) ? col.ans1_values : [col.ans1];\n          formattedData[col.name] = ans1Values.map((value, index) => ({\n            ans1: value\n          }));\n        });\n        console.log('server1 formattedData:', formattedData);\n        setRowData1(formattedData);\n        addStatusMessage(`成功从 Server2 获取 ${Object.keys(formattedData).length} 列的行数据`);\n      }\n    } catch (e) {\n      addStatusMessage(`获取 Server2 行数据失败: ${e.message}`);\n      console.error('Fetch from Server2 error:', e);\n    }\n  };\n  const handleClearInput = () => {\n    setQuery('');\n    setDecryptedOutput('');\n    addStatusMessage('已清除所有输入和结果');\n    setRowData0({});\n    setRowData1({});\n  };\n  const handleDecryptResults = () => {\n    addStatusMessage('正在解密结果...');\n    if (Object.keys(rowData0).length === 0 || Object.keys(rowData1).length === 0) {\n      setDecryptedOutput('No data yet, please query Server1 and Server2 first');\n      addStatusMessage('解密失败：缺少 Server1 或 Server2 数据');\n      return;\n    }\n\n    // 最终结果对象，结构与 rowData0 一致，如 { ID: ['差值', ...], is_active: [...] }\n    const decryptedOutput = {};\n    let filteredRowCount = 0; // 记录被过滤的全零行数量\n\n    // 遍历每一个字段，如 ID、is_active、order_amount\n    Object.keys(rowData0).forEach(key => {\n      const arr0 = rowData0[key]; // 比如 [{ans0: '3665825759'}, {ans0: '789741340'}, ...]\n      const arr1 = rowData1[key] || []; // 避免 key 不存在于 rowData1\n\n      // 构建差值字符串数组\n      const diffArray = arr0.map((item0, i) => {\n        const item1 = arr1[i]; // 可能为 undefined\n\n        // 取 ans0 和 ans1 字符串\n        const ans0Str = item0 === null || item0 === void 0 ? void 0 : item0.ans0;\n        const ans1Str = item1 === null || item1 === void 0 ? void 0 : item1.ans1;\n        const num0 = Number(ans0Str);\n        const num1 = Number(ans1Str);\n\n        // 检查是否是合法数字\n        if (isNaN(num0) || isNaN(num1)) {\n          return 'N/A';\n        }\n\n        // 计算差值\n        return num0 - num1;\n      });\n\n      // 存入结果\n      decryptedOutput[key] = diffArray;\n    });\n\n    // 过滤全零行\n    const filteredOutput = {};\n    const rowCount = Math.max(...Object.values(decryptedOutput).map(arr => arr.length));\n\n    // 遍历每一行\n    for (let rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n      let isAllZero = true;\n\n      // 检查当前行是否全为零\n      for (const key in decryptedOutput) {\n        const value = decryptedOutput[key][rowIndex];\n        if (value !== 0 && value !== '0' && value !== 'N/A') {\n          isAllZero = false;\n          break;\n        }\n      }\n\n      // 如果不是全零行，则保留该行数据\n      if (!isAllZero) {\n        for (const key in decryptedOutput) {\n          if (!filteredOutput[key]) {\n            filteredOutput[key] = [];\n          }\n          filteredOutput[key].push(decryptedOutput[key][rowIndex]);\n        }\n      } else {\n        filteredRowCount++;\n      }\n    }\n    if (filteredRowCount > 0) {\n      addStatusMessage(`过滤了 ${filteredRowCount} 行全零数据`);\n    }\n    console.log('🔍 解密结果（差值，字符串数字数组）:', filteredOutput);\n\n    // 设置到 state，用于后续展示或导出\n    setDecryptedOutput(filteredOutput);\n    addStatusMessage('解密完成：已生成各列的差值（字符串数字数组）');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-text\",\n        children: \"CryptoDB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: onLogout,\n        children: \"\\u9000\\u51FA\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"role-badge\",\n      children: \"\\u67E5\\u8BE2\\u8005\\u6A21\\u5F0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"query-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-title\",\n            children: \"\\u68C0\\u7D22\\u6A21\\u5F0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"column-select\",\n            className: \"query-mode-label\",\n            children: \"\\u9009\\u62E9\\u67E5\\u8BE2\\u6A21\\u5F0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"query-mode-select\",\n            className: \"table-select query-mode-select\" // 注意：您原来的 className 有笔误，应该是 query-mode-select，不是 query-mode-label\n            ,\n            value: selectedQueryMode,\n            onChange: e => setSelectedQueryMode(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- \\u8BF7\\u9009\\u62E9\\u67E5\\u8BE2\\u6A21\\u5F0F --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"exact\",\n              children: \"\\u7B49\\u503C\\u67E5\\u8BE2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"range\",\n              children: \"\\u8303\\u56F4\\u67E5\\u8BE2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"prefix\",\n              children: \"\\u524D\\u7F00\\u67E5\\u8BE2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"query-input\",\n            className: \"query-input\",\n            placeholder: \"Enter your encrypted SQL query here...\",\n            value: query,\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-selection-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-select-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"column-select\",\n                className: \"query-mode-label\",\n                children: \"\\u9009\\u62E9\\u8868\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"table-select\",\n                className: \"table-select\",\n                value: selectedTable,\n                onChange: handleTableChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- \\u8BF7\\u9009\\u62E9\\u8868 --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 3\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"user_stats\",\n                  children: \"user_stats\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 3\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"user_credit\",\n                  children: \"user_credit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 3\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"column-select-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"column-select\",\n                className: \"query-mode-label\",\n                children: \"\\u9009\\u62E9\\u5217\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"column-select\",\n                className: \"table-select\",\n                value: selectedColumn,\n                onChange: e => setSelectedColumn(e.target.value),\n                disabled: tableColumns.length === 0,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- \\u8BF7\\u9009\\u62E9\\u5217 --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 7\n                }, this), tableColumns.map(column => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: column.name,\n                  children: column.name\n                }, `column-${column.name}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 9\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"secure-query\",\n            className: \"btn btn-secure\",\n            onClick: handleSecureQuery,\n            children: \"Secure Query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"clear-input\",\n            className: \"btn btn-clear\",\n            onClick: handleClearInput,\n            children: \"Clear Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-title\",\n                children: \"Query Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-clear-status\",\n                onClick: handleClearStatus,\n                children: \"Clear Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-output\",\n              ref: statusOutputRef,\n              children: statusMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-message\",\n                children: msg\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-title\",\n            children: \"Query Results S1 & S2(Encrypted)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results1-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result1-item\",\n              children: \"IP\\u5730\\u5740:172.28.7.202 \\u7AEF\\u53E3\\u53F7:8081\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-small\",\n              onClick: handleFetchAns0FromServer1,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result2-item\",\n                children: \"Get result from S1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"query-results-left\",\n            children: Object.keys(rowData0).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: \"No data from Server1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 7\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-scroll1\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"data-table1\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: Object.keys(rowData0).map(colName => /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"data-header1\",\n                      children: colName\n                    }, `s1-header-${colName}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 421,\n                      columnNumber: 9\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 5\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: (() => {\n                    // 获取最大行数\n                    const maxRows = Math.max(...Object.values(rowData0).map(col => col.length));\n\n                    // 生成行数据\n                    const rows = [];\n                    for (let i = 0; i < maxRows; i++) {\n                      rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                        className: \"data-body-row1\",\n                        children: Object.keys(rowData0).map(colName => {\n                          var _rowData0$colName$i;\n                          return /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"data-body-cell1\",\n                            children: ((_rowData0$colName$i = rowData0[colName][i]) === null || _rowData0$colName$i === void 0 ? void 0 : _rowData0$colName$i.ans0) || '-'\n                          }, `s1-cell-${colName}-${i}`, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 441,\n                            columnNumber: 23\n                          }, this);\n                        })\n                      }, `s1-row-${i}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 19\n                      }, this));\n                    }\n                    return rows;\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results1-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result1-item\",\n              children: \"IP\\u5730\\u5740:172.28.7.202 \\u7AEF\\u53E3\\u53F7:8082\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-small\",\n              onClick: handleFetchAns1FromServer2,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result2-item\",\n                children: \"Get result from S2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"query-results-right\",\n            children: Object.keys(rowData1).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: \"No data from Server2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 7\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-scroll1\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"data-table1\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: Object.keys(rowData0).map(colName => /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"data-header1\",\n                      children: colName\n                    }, `s1-header-${colName}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 481,\n                      columnNumber: 9\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 5\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: (() => {\n                    // 获取最大行数\n                    const maxRows = Math.max(...Object.values(rowData1).map(col => col.length));\n\n                    // 生成行数据\n                    const rows = [];\n                    for (let i = 0; i < maxRows; i++) {\n                      rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                        className: \"data-body-row1\",\n                        children: Object.keys(rowData1).map(colName => {\n                          var _rowData1$colName$i;\n                          return /*#__PURE__*/_jsxDEV(\"td\", {\n                            className: \"data-body-cell1\",\n                            children: ((_rowData1$colName$i = rowData1[colName][i]) === null || _rowData1$colName$i === void 0 ? void 0 : _rowData1$colName$i.ans1) || '-'\n                          }, `s2-cell-${colName}-${i}`, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 501,\n                            columnNumber: 23\n                          }, this);\n                        })\n                      }, `s2-row-${i}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 19\n                      }, this));\n                    }\n                    return rows;\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"decrypt-results\",\n            className: \"btn btn-decrypt\",\n            onClick: handleDecryptResults,\n            children: \"Decrypt Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"query-results\",\n            children: Object.keys(decryptedOutput).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: \"No results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 7\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-scroll1\",\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"data-table1\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: Object.keys(decryptedOutput).map(colName => /*#__PURE__*/_jsxDEV(\"th\", {\n                      className: \"data-header1\",\n                      children: colName\n                    }, `s1-header-${colName}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 9\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 5\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: (() => {\n                    // 获取最大行数\n                    const maxRows = Math.max(...Object.values(decryptedOutput).map(col => col.length));\n\n                    // 生成行数据\n                    const rows = [];\n                    for (let i = 0; i < maxRows; i++) {\n                      rows.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n                        className: \"data-body-row1\",\n                        children: Object.keys(decryptedOutput).map(colName => /*#__PURE__*/_jsxDEV(\"td\", {\n                          className: \"data-body-cell1\",\n                          children: decryptedOutput[colName][i]\n                        }, `s1-cell-${colName}-${i}`, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 552,\n                          columnNumber: 23\n                        }, this))\n                      }, `s1-row-${i}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 549,\n                        columnNumber: 19\n                      }, this));\n                    }\n                    return rows;\n                  })()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n}\n_s(CryptoDBPanel, \"g6e/PhSDxP6AAnDnBMin8cBlBk0=\");\n_c = CryptoDBPanel;\nexport default CryptoDBPanel;\nvar _c;\n$RefreshReg$(_c, \"CryptoDBPanel\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","CryptoDBPanel","onLogout","_s","query","setQuery","decryptedOutput","setDecryptedOutput","selectedTable","setSelectedTable","statusMessages","setStatusMessages","selectedQueryMode","setSelectedQueryMode","rowData0","setRowData0","rowData1","setRowData1","tableColumns","setTableColumns","selectedColumn","setSelectedColumn","statusOutputRef","fetchTableColumns","tableName","addStatusMessage","response","fetch","method","headers","body","JSON","stringify","table","data","json","columns","console","log","error","message","handleTableChange","e","target","value","prev","Date","toLocaleTimeString","handleClearStatus","current","scrollTop","scrollHeight","handleSecureQuery","trim","alert","column","mode","rawData","text","parse","handleFetchAns0FromServer1","res","formattedData","forEach","col","ans0Values","Array","isArray","ans0_values","ans0","name","map","index","Object","keys","length","handleFetchAns1FromServer2","ans1Values","ans1_values","ans1","handleClearInput","handleDecryptResults","filteredRowCount","key","arr0","arr1","diffArray","item0","i","item1","ans0Str","ans1Str","num0","Number","num1","isNaN","filteredOutput","rowCount","Math","max","values","arr","rowIndex","isAllZero","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","onChange","placeholder","disabled","ref","msg","colName","maxRows","rows","_rowData0$colName$i","_rowData1$colName$i","_c","$RefreshReg$"],"sources":["/home/user/workplace/CryptoDB/frontend/src/CryptoDBPanel.js"],"sourcesContent":["import React, {  useState, useEffect, useRef } from 'react';\nimport './CryptoDBPanel.css'; // 引入样式文件\n\nfunction CryptoDBPanel({ onLogout }) {\n  const [query, setQuery] = useState('');\n  const [decryptedOutput, setDecryptedOutput] = useState('');\n  const [selectedTable, setSelectedTable] = useState('');\n  const [statusMessages, setStatusMessages] = useState([]); // 新增状态，用于存储状态消息\n  const [selectedQueryMode, setSelectedQueryMode] = useState('');  // 默认是等值查询\n  const [rowData0, setRowData0] = useState({}); // {columnName: [{ans0: value, rowId: id}, ...]}\n  const [rowData1, setRowData1] = useState({});\n  const [tableColumns, setTableColumns] = useState([]); // 存储当前选中表的列属性\nconst [selectedColumn, setSelectedColumn] = useState(''); // 当前选中的列\n\n\n  // 创建 ref 用于状态输出容器\n  const statusOutputRef = useRef(null);\n\n  //从数据库获取表列属性的函数：\n\n  const fetchTableColumns = async (tableName) => {\n  try {\n    addStatusMessage(`正在获取表 ${tableName} 的列属性...`);\n    \n    const response = await fetch(`http://172.28.7.202:8080/api/getTableColumns`, {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({ table: tableName })\n});\n    const data = await response.json();\n    \n    if (data && data.columns) {\n      setTableColumns(data.columns);\n      console.log(\"col data:\", data.columns);\n      addStatusMessage(`成功获取表 ${tableName} 的列属性`);\n    } else {\n      setTableColumns([]);\n      addStatusMessage(`表 ${tableName} 没有返回列属性数据`);\n    }\n  } catch (error) {\n    setTableColumns([]);\n    addStatusMessage(`获取表 ${tableName} 列属性失败: ${error.message}`);\n    console.error('获取表列属性错误:', error);\n  }\n};\n\n  const handleTableChange = async (e) => {\n  const tableName = e.target.value;\n  setSelectedTable(tableName);\n  setSelectedColumn(''); // 重置列选择\n   // 只有当用户选择了具体的表（非空）时，才去获取列信息\n  if (tableName) {\n    await fetchTableColumns(tableName);\n  } else {\n    // 用户选择了“请选择表”，清空列信息\n    setTableColumns([]);\n  }\n \n};\n\n  // 添加状态消息的函数\n  const addStatusMessage = (message) => {\n    setStatusMessages(prev => [...prev, `> ${new Date().toLocaleTimeString()}: ${message}`]);\n  };\n\n  // 清除状态消息的函数\n  const handleClearStatus = () => {\n    setStatusMessages([]);\n    addStatusMessage('状态日志已清除');\n  };\n\n   // 当状态消息更新时，自动滚动到底部\n  useEffect(() => {\n    if (statusOutputRef.current) {\n      statusOutputRef.current.scrollTop = statusOutputRef.current.scrollHeight;\n    }\n  }, [statusMessages]); // 当 statusMessages 变化时触发\n\n  const handleSecureQuery = async () => {\n    if (!query.trim()) {\n    alert('请输入查询语句');\n    return;\n    }\n\n    if (!selectedTable) {\n      alert('请选择一个表');\n      return;\n    }\n\n    if (!selectedQueryMode) {\n      alert('请选择查询模式');\n      return;\n    }\n\n    // 如果您的查询逻辑依赖列选择，比如只针对某列加密/查询，也可以加上：\n    if (!selectedColumn) {\n      alert('请选择列');\n      return;\n    }\n\n  addStatusMessage('正在提交安全查询...');\n\n   \n    \n    try {\n      const response = await fetch('http://172.28.7.202:8080/api/secureQuery', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query, \n          table: selectedTable,\n          column: selectedColumn,     // 新增：当前选中的列名\n          mode: selectedQueryMode,   // 新增：当前选中的查询模式}),\n      })\n      });\n\n      const rawData = await response.text();\n      const data = JSON.parse(rawData);\n      console.log('main:', data);\n      \n      addStatusMessage('查询已成功提交到服务器');\n      addStatusMessage('请从服务器获取结果');\n    } catch (error) {\n      addStatusMessage(`查询失败: ${error.message}`);\n    }\n  };\n\n  // ===== 新增：从 Server1 (8081) 单独获取 ans0 =====\nconst handleFetchAns0FromServer1 = async () => {\n  addStatusMessage('正在从 Server1 (8081) 获取行级结果...');\n  \n  try {\n    const res = await fetch('http://172.28.7.202:8081/server0', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    });\n\n    const rawData = await res.text();\n    const data = JSON.parse(rawData);\n    \n    console.log('server0 Data:', data.columns);\n    \n    if (data && data.columns) {\n      const formattedData = {};\n      \n      data.columns.forEach(col => {\n        // 假设每列的 ans0 值是一个数组，每个元素代表一行\n        // 如果后端返回的是单个值，需要调整为数组形式\n        const ans0Values = Array.isArray(col.ans0_values) ? col.ans0_values : [col.ans0];\n        formattedData[col.name] = ans0Values.map((value, index) => ({\n          ans0: value,\n        }));\n      });\n      console.log('server0 formattedData:',formattedData);\n      setRowData0(formattedData);\n      addStatusMessage(`成功从 Server1 获取 ${Object.keys(formattedData).length} 列的行数据`);\n    }\n  } catch (e) {\n    addStatusMessage(`获取 Server1 行数据失败: ${e.message}`);\n    console.error('Fetch from Server1 error:', e);\n  }\n};\n\n  // ===== 新增：从 Server2 (8082) 单独获取 ans1 =====\n  const handleFetchAns1FromServer2 = async () => {\n  addStatusMessage('正在从 Server2 (8082) 获取行级结果...');\n  \n  try {\n    const res = await fetch('http://172.28.7.202:8082/server1', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    });\n\n    const rawData = await res.text();\n    const data = JSON.parse(rawData);\n    \n    console.log('server1 Data:', data);\n    if (data && data.columns) {\n      const formattedData = {};\n      \n      data.columns.forEach(col => {\n        // 假设每列的 ans1 值是一个数组，每个元素代表一行\n        // 如果后端返回的是单个值，需要调整为数组形式\n        const ans1Values = Array.isArray(col.ans1_values) ? col.ans1_values : [col.ans1];\n       \n        formattedData[col.name] = ans1Values.map((value, index) => ({\n          ans1: value,\n        }));\n      });\n      console.log('server1 formattedData:', formattedData);\n      setRowData1(formattedData);\n      addStatusMessage(`成功从 Server2 获取 ${Object.keys(formattedData).length} 列的行数据`);\n    }\n  } catch (e) {\n    addStatusMessage(`获取 Server2 行数据失败: ${e.message}`);\n    console.error('Fetch from Server2 error:', e);\n  }\n};\n\n  const handleClearInput = () => {\n    setQuery('');\n    setDecryptedOutput('');\n    addStatusMessage('已清除所有输入和结果');\n    setRowData0({});\n    setRowData1({});\n  };\n\nconst handleDecryptResults = () => {\n  addStatusMessage('正在解密结果...');\n\n  if (Object.keys(rowData0).length === 0 || Object.keys(rowData1).length === 0) {\n    setDecryptedOutput('No data yet, please query Server1 and Server2 first');\n    addStatusMessage('解密失败：缺少 Server1 或 Server2 数据');\n    return;\n  }\n\n  // 最终结果对象，结构与 rowData0 一致，如 { ID: ['差值', ...], is_active: [...] }\n  const decryptedOutput = {};\n  let filteredRowCount = 0; // 记录被过滤的全零行数量\n\n  // 遍历每一个字段，如 ID、is_active、order_amount\n  Object.keys(rowData0).forEach((key) => {\n    const arr0 = rowData0[key]; // 比如 [{ans0: '3665825759'}, {ans0: '789741340'}, ...]\n    const arr1 = rowData1[key] || []; // 避免 key 不存在于 rowData1\n\n    // 构建差值字符串数组\n    const diffArray = arr0.map((item0, i) => {\n      const item1 = arr1[i]; // 可能为 undefined\n\n      // 取 ans0 和 ans1 字符串\n      const ans0Str = item0?.ans0;\n      const ans1Str = item1?.ans1;\n\n      const num0 = Number(ans0Str);\n      const num1 = Number(ans1Str);\n\n      // 检查是否是合法数字\n      if (isNaN(num0) || isNaN(num1)) {\n        return 'N/A';\n      }\n\n      // 计算差值\n      return num0 - num1;\n    });\n\n    // 存入结果\n    decryptedOutput[key] = diffArray;\n  });\n\n  // 过滤全零行\n  const filteredOutput = {};\n  const rowCount = Math.max(...Object.values(decryptedOutput).map(arr => arr.length));\n  \n  // 遍历每一行\n  for (let rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n    let isAllZero = true;\n    \n    // 检查当前行是否全为零\n    for (const key in decryptedOutput) {\n      const value = decryptedOutput[key][rowIndex];\n      if (value !== 0 && value !== '0' && value !== 'N/A') {\n        isAllZero = false;\n        break;\n      }\n    }\n    \n    // 如果不是全零行，则保留该行数据\n    if (!isAllZero) {\n      for (const key in decryptedOutput) {\n        if (!filteredOutput[key]) {\n          filteredOutput[key] = [];\n        }\n        filteredOutput[key].push(decryptedOutput[key][rowIndex]);\n      }\n    } else {\n      filteredRowCount++;\n    }\n  }\n\n  if (filteredRowCount > 0) {\n    addStatusMessage(`过滤了 ${filteredRowCount} 行全零数据`);\n  }\n\n  console.log('🔍 解密结果（差值，字符串数字数组）:', filteredOutput);\n\n  // 设置到 state，用于后续展示或导出\n  setDecryptedOutput(filteredOutput);\n\n  addStatusMessage('解密完成：已生成各列的差值（字符串数字数组）');\n};\n\n  return (\n    <div className=\"container\">\n      \n      <div className=\"logo-container\">\n        <div className=\"logo\"></div>\n        <div className=\"logo-text\">CryptoDB</div>\n         <button className=\"logout-btn\" onClick={onLogout}>\n          退出登录\n        </button>\n         \n      </div>\n     \n    <span className=\"role-badge\">查询者模式</span>\n      <div className=\"main-content\">\n        \n        <div className=\"query-section\">\n          <div className=\"panel\">\n            <div className=\"panel-title\">检索模式</div>\n            \n            {/* 🔧 新增：查询模式 label + 下拉菜单 */}\n             <label htmlFor=\"column-select\" className=\"query-mode-label\">选择查询模式</label>\n            \n            <select\n            id=\"query-mode-select\"\n            className=\"table-select query-mode-select\"  // 注意：您原来的 className 有笔误，应该是 query-mode-select，不是 query-mode-label\n            value={selectedQueryMode}\n            onChange={(e) => setSelectedQueryMode(e.target.value)}\n          >\n            <option value=\"\">-- 请选择查询模式 --</option>\n            <option value=\"exact\">等值查询</option>\n            <option value=\"range\">范围查询</option>\n            <option value=\"prefix\">前缀查询</option>\n          </select>\n            <textarea\n              id=\"query-input\"\n              className=\"query-input\"\n              placeholder=\"Enter your encrypted SQL query here...\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            ></textarea>\n            <div className=\"table-selection-container\">\n  <div className=\"table-select-group\">\n    <label htmlFor=\"column-select\" className=\"query-mode-label\">选择表</label>\n    <select\n  id=\"table-select\"\n  className=\"table-select\"\n  value={selectedTable}\n  onChange={handleTableChange}\n>\n  \n  <option value=\"\">-- 请选择表 --</option>\n  <option value=\"user_stats\">user_stats</option>\n  <option value=\"user_credit\">user_credit</option>\n</select>\n  </div>\n  \n  <div className=\"column-select-group\">\n    <label htmlFor=\"column-select\" className=\"query-mode-label\">选择列</label>\n    <select\n      id=\"column-select\"\n      className=\"table-select\"\n      value={selectedColumn}\n      onChange={(e) => setSelectedColumn(e.target.value)}\n      disabled={tableColumns.length === 0}\n    >\n      <option value=\"\">-- 请选择列 --</option>\n      {tableColumns.map(column => (\n        <option key={`column-${column.name}`} value={column.name}>\n          {column.name}\n        </option>\n      ))}\n    </select>\n  </div>\n</div>       \n             \n            <button id=\"secure-query\" className=\"btn btn-secure\" onClick={handleSecureQuery}>\n              Secure Query\n            </button>\n            <button id=\"clear-input\" className=\"btn btn-clear\" onClick={handleClearInput}>\n              Clear Input\n            </button>\n            \n            {/* 新增：状态显示框 */}\n            <div className=\"status-panel\">\n              <div className=\"status-header\">\n                <div className=\"status-title\">Query Status</div>\n                <button className=\"btn btn-clear-status\" onClick={handleClearStatus}>\n                  Clear Status\n                </button>\n              </div>\n              <div className=\"status-output\" ref={statusOutputRef}>\n                {statusMessages.map((msg, index) => (\n                  <div key={index} className=\"status-message\">{msg}</div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"panel\">\n            <div className=\"panel-title\">Query Results S1 & S2(Encrypted)</div>\n\n      \n  {/* Server1 表格 */}\n           \n               <div className=\"results1-container\">\n              <div className=\"result1-item\">\n                IP地址:172.28.7.202 端口号:8081\n              </div>\n              <button\n                className=\"btn-small\"\n                onClick={handleFetchAns0FromServer1}\n              >\n                <div className=\"result2-item\">\n                  Get result from S1\n                </div>\n              </button>\n            </div>\n              \n  {/* Server1 表格 */}\n  <div className=\"query-results-left\">\n\n              \n    {Object.keys(rowData0).length === 0 ? (\n      <div className=\"result-item\">No data from Server1</div>\n    ) : (\n     <div className=\"table-scroll1\">\n    <table className=\"data-table1\">\n         <thead>\n    <tr>\n      {Object.keys(rowData0).map(colName => (\n        <th key={`s1-header-${colName}`} className=\"data-header1\">\n          {colName}\n        </th>\n      ))}\n    </tr>\n  </thead>\n          <tbody>\n            {(() => {\n              // 获取最大行数\n              const maxRows = Math.max(\n                ...Object.values(rowData0).map(col => col.length)\n              );\n              \n              // 生成行数据\n              const rows = [];\n              for (let i = 0; i < maxRows; i++) {\n                rows.push(\n                  <tr key={`s1-row-${i}` } className=\"data-body-row1\">\n               \n                    {Object.keys(rowData0).map(colName => (\n                      <td key={`s1-cell-${colName}-${i}`} className=\"data-body-cell1\">\n                        {rowData0[colName][i]?.ans0 || '-'}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              }\n              return rows;\n            })()}\n          </tbody>\n        </table>\n      </div>\n    )}\n  </div>\n\n \n               <div className=\"results1-container\">\n              <div className=\"result1-item\">\n                IP地址:172.28.7.202 端口号:8082\n              </div>\n              <button\n                className=\"btn-small\"\n                onClick={handleFetchAns1FromServer2}\n              >\n                <div className=\"result2-item\">\n                  Get result from S2\n                </div>\n              </button>\n            </div>\n              \n  {/* Server2 表格 */}\n  <div className=\"query-results-right\">\n    {Object.keys(rowData1).length === 0 ? (\n      <div className=\"result-item\">No data from Server2</div>\n    ) : (\n      <div className=\"table-scroll1\">\n    <table className=\"data-table1\">\n          <thead>\n    <tr>\n      {Object.keys(rowData0).map(colName => (\n        <th key={`s1-header-${colName}`} className=\"data-header1\">\n          {colName}\n        </th>\n      ))}\n    </tr>\n  </thead>\n          <tbody>\n            {(() => {\n              // 获取最大行数\n              const maxRows = Math.max(\n                ...Object.values(rowData1).map(col => col.length)\n              );\n              \n              // 生成行数据\n              const rows = [];\n              for (let i = 0; i < maxRows; i++) {\n                rows.push(\n                  <tr key={`s2-row-${i}`} className=\"data-body-row1\">\n                  \n                    {Object.keys(rowData1).map(colName => (\n                      <td key={`s2-cell-${colName}-${i}`} className=\"data-body-cell1\">\n                        {rowData1[colName][i]?.ans1 || '-'}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              }\n              return rows;\n            })()}\n          </tbody>\n        </table>\n      </div>\n    )}\n  </div>\n\n  \n            <button id=\"decrypt-results\" className=\"btn btn-decrypt\" onClick={handleDecryptResults}>\n              Decrypt Results\n            </button>\n            \n            <div className=\"query-results\">\n               {Object.keys(decryptedOutput).length === 0 ? (\n      <div className=\"result-item\">No results</div>\n    ) : (\n     <div className=\"table-scroll1\">\n    <table className=\"data-table1\">\n         <thead>\n    <tr>\n      {Object.keys(decryptedOutput).map(colName => (\n        <th key={`s1-header-${colName}`} className=\"data-header1\">\n          {colName}\n        </th>\n      ))}\n    </tr>\n  </thead>\n          <tbody>\n            {(() => {\n              // 获取最大行数\n              const maxRows = Math.max(\n                ...Object.values(decryptedOutput).map(col => col.length)\n              );\n              \n              \n\n              // 生成行数据\n              const rows = [];\n              for (let i = 0; i < maxRows; i++) {\n                rows.push(\n                  <tr key={`s1-row-${i}` } className=\"data-body-row1\">\n               \n                    {Object.keys(decryptedOutput).map(colName => (\n                      <td key={`s1-cell-${colName}-${i}`} className=\"data-body-cell1\">\n                        {decryptedOutput[colName][i]}\n                      </td>\n                    ))}\n                  </tr>\n                );\n              }\n              return rows;\n            })()}\n          </tbody>\n        </table>\n      </div>\n    )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CryptoDBPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}