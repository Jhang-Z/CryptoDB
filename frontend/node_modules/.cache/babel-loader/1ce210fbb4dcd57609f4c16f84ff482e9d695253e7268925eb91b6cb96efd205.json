{"ast":null,"code":"var _jsxFileName = \"/home/user/workplace/test/frontend/src/CryptoDBPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CryptoDBPanel.css'; // 引入样式文件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CryptoDBPanel() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState('');\n\n  //   const handleSecureQuery = () => {\n  //     if (!query.trim()) {\n  //       alert('Please enter a query before submitting.');\n  //       return;\n  //     }\n  //     // 模拟发送到后端（后续可替换为真实 fetch）\n  //     // fetch('/api/secureQuery', { method: 'POST', body: JSON.stringify({ data: query }) })\n  //     //   .then(...) \n  //     setResults(`[模拟加密查询结果]\\n你输入的查询是：${query}\\n（这里会显示后端返回的加密结果）`);\n  //   };\n  const handleSecureQuery = async () => {\n    if (!query.trim()) {\n      alert('请输入一个查询后再提交。');\n      return;\n    }\n    const response = await fetch('http://172.28.7.202:8080/api/secureQuery', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json' // 告诉后端我们传的是 JSON\n      },\n      body: JSON.stringify({\n        query\n      }) // 发送一个 JSON 对象，包含用户输入的 query\n    });\n    const resultFromBackend = await response.text(); // 如果后端返回纯文本\n    setResults('resultFromBackend');\n\n    //   try {\n    //     // 发送 POST 请求到后端 API\n    //     const response = await fetch('http://172.28.7.202:8080/api/secureQuery', {\n    //       method: 'POST',\n    //       headers: {\n    //         'Content-Type': 'application/json', // 告诉后端我们传的是 JSON\n    //       },\n    //       body: JSON.stringify({ query }), // 发送一个 JSON 对象，包含用户输入的 query\n    //     });\n\n    //     if (!response.ok) {\n    //       // 如果 HTTP 请求失败，比如 500 或 404\n    //       const errorText = await response.text(); // 或 response.json()，根据后端返回格式\n    //       throw new Error(`后端请求失败: ${response.status} - ${errorText}`);\n    //     }\n\n    //     // 读取后端返回的文本（或 JSON，根据实际情况调整）\n    //     const resultFromBackend = await response.text(); // 如果后端返回纯文本\n    //     // 如果后端返回的是 JSON，比如 { \"result\": \"xxx\" }，则使用：\n    //     // const data = await response.json();\n    //     // const resultFromBackend = data.result;\n\n    //     // 更新页面上的结果框\n    //     setResults(resultFromBackend);\n\n    //   } catch (error) {\n    //     console.error('请求出错：', error);\n    //     setResults(`❌请求后端失败: ${error.message}`);\n    //   }\n  };\n  const handleClearInput = () => {\n    setQuery('');\n    setResults('');\n  };\n  const handleDecryptResults = () => {\n    if (!results.trim()) {\n      alert('No encrypted results to decrypt.');\n      return;\n    }\n    // 模拟解密（实际应发送到后端）\n    setResults(`[模拟解密结果]\\n原始加密内容：\\n${results}\\n\\n解密后：这是一个模拟的解密结果！`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-text\",\n        children: \"CryptoDB UI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"query-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-title\",\n            children: \"Encrypted Query Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"query-input\",\n            className: \"query-input\",\n            placeholder: \"Enter your encrypted SQL query here...\",\n            value: query,\n            onChange: e => setQuery(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"secure-query\",\n            className: \"btn btn-secure\",\n            onClick: handleSecureQuery,\n            children: \"Secure Query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"clear-input\",\n            className: \"btn btn-clear\",\n            onClick: handleClearInput,\n            children: \"Clear Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-title\",\n            children: \"Query Results (Encrypted)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"query-results\",\n            className: \"query-results\",\n            children: results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"decrypt-results\",\n            className: \"btn btn-decrypt\",\n            onClick: handleDecryptResults,\n            children: \"Decrypt Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(CryptoDBPanel, \"hNc2VUS3s5a4K45kT9ygn4NHcdQ=\");\n_c = CryptoDBPanel;\nexport default CryptoDBPanel;\nvar _c;\n$RefreshReg$(_c, \"CryptoDBPanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CryptoDBPanel","_s","query","setQuery","results","setResults","handleSecureQuery","trim","alert","response","fetch","method","headers","body","JSON","stringify","resultFromBackend","text","handleClearInput","handleDecryptResults","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/user/workplace/test/frontend/src/CryptoDBPanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './CryptoDBPanel.css'; // 引入样式文件\n\nfunction CryptoDBPanel() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState('');\n\n//   const handleSecureQuery = () => {\n//     if (!query.trim()) {\n//       alert('Please enter a query before submitting.');\n//       return;\n//     }\n//     // 模拟发送到后端（后续可替换为真实 fetch）\n//     // fetch('/api/secureQuery', { method: 'POST', body: JSON.stringify({ data: query }) })\n//     //   .then(...) \n//     setResults(`[模拟加密查询结果]\\n你输入的查询是：${query}\\n（这里会显示后端返回的加密结果）`);\n//   };\n  const handleSecureQuery = async () => {\n  if (!query.trim()) {\n    alert('请输入一个查询后再提交。');\n    return;\n  }\n\n  const response = await fetch('http://172.28.7.202:8080/api/secureQuery', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json', // 告诉后端我们传的是 JSON\n      },\n      body: JSON.stringify({ query }), // 发送一个 JSON 对象，包含用户输入的 query\n    });\n\n  const resultFromBackend = await response.text(); // 如果后端返回纯文本\n  setResults('resultFromBackend');\n\n\n//   try {\n//     // 发送 POST 请求到后端 API\n//     const response = await fetch('http://172.28.7.202:8080/api/secureQuery', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json', // 告诉后端我们传的是 JSON\n//       },\n//       body: JSON.stringify({ query }), // 发送一个 JSON 对象，包含用户输入的 query\n//     });\n  \n\n//     if (!response.ok) {\n//       // 如果 HTTP 请求失败，比如 500 或 404\n//       const errorText = await response.text(); // 或 response.json()，根据后端返回格式\n//       throw new Error(`后端请求失败: ${response.status} - ${errorText}`);\n//     }\n\n//     // 读取后端返回的文本（或 JSON，根据实际情况调整）\n//     const resultFromBackend = await response.text(); // 如果后端返回纯文本\n//     // 如果后端返回的是 JSON，比如 { \"result\": \"xxx\" }，则使用：\n//     // const data = await response.json();\n//     // const resultFromBackend = data.result;\n\n//     // 更新页面上的结果框\n//     setResults(resultFromBackend);\n\n//   } catch (error) {\n//     console.error('请求出错：', error);\n//     setResults(`❌请求后端失败: ${error.message}`);\n//   }\n  };\n\n  const handleClearInput = () => {\n    setQuery('');\n    setResults('');\n  };\n\n  const handleDecryptResults = () => {\n    if (!results.trim()) {\n      alert('No encrypted results to decrypt.');\n      return;\n    }\n    // 模拟解密（实际应发送到后端）\n    setResults(`[模拟解密结果]\\n原始加密内容：\\n${results}\\n\\n解密后：这是一个模拟的解密结果！`);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"logo-container\">\n        <div className=\"logo\"></div>\n        <div className=\"logo-text\">CryptoDB UI</div>\n      </div>\n\n      <div className=\"main-content\">\n        <div className=\"query-section\">\n          <div className=\"panel\">\n            <div className=\"panel-title\">Encrypted Query Input</div>\n            <textarea\n              id=\"query-input\"\n              className=\"query-input\"\n              placeholder=\"Enter your encrypted SQL query here...\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            ></textarea>\n            <button id=\"secure-query\" className=\"btn btn-secure\" onClick={handleSecureQuery}>\n              Secure Query\n            </button>\n            <button id=\"clear-input\" className=\"btn btn-clear\" onClick={handleClearInput}>\n              Clear Input\n            </button>\n          </div>\n\n          <div className=\"panel\">\n            <div className=\"panel-title\">Query Results (Encrypted)</div>\n            <div id=\"query-results\" className=\"query-results\">\n              {results}\n            </div>\n            <button id=\"decrypt-results\" className=\"btn btn-decrypt\" onClick={handleDecryptResults}>\n              Decrypt Results\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CryptoDBPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}